CA key pass: alex

Country Name (2 letter code) [AU]:SG
State or Province Name (full name) [Some-State]:SG
Locality Name (eg, city) []:SG
Organization Name (eg, company) [Internet Widgits Pty Ltd]:alex
Organizational Unit Name (eg, section) []:alex
Common Name (e.g. server FQDN or YOUR name) []:www.alex.com
Email Address []:



A challenge password []:alex_challenge


server(pi) run compile

g++ tls-server-lib/test_tls_server.cpp tls-server-lib/tls_server_lib.cpp tls-server-lib/tls_pthread.cpp tls-server-lib/make_tls_server.cpp tls-server-lib/tls_common_lib.cpp –pthread –lssl –lcrypto –o test_tls_server

/* END TODO */
/* TODO: Insert SSL read here into buffer */ len = sslRead(conn, buffer, 128);
/* END TODO */
/* TODO: Insert SSL read here into buffer */ len = sslRead(conn, buffer, 128);
/* END TODO */
/* TODO: #define filenames for the client private key, certificatea,
CA filename, etc. that you need to create a client */
#define SERVER_NAME "localhost" #define CA_CERT_FNAME "signing.pem" #define PORT_NUM 5000
#define CLIENT_CERT_FNAME "laptop.crt" #define CLIENT_KEY_FNAME "laptop.key"
#define SERVER_NAME_ON_CERT "alex.epp.com"
/* END TODO */
/* TODO: Create a new client */
createClient(serverName, portNum, 1, CA_CERT_FNAME, SERVER_NAME_ON_CERT, 1, CLIENT_CERT_FNAME, CLIENT_KEY_FNAME, readerThread, writerThread);
/* END TODO */
/* TODO: Add in while loop to prevent main from exiting while the client loop is running */
while(client_is_running());
/* END TODO */